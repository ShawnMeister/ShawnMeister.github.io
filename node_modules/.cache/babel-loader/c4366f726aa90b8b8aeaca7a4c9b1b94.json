{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Shawn\\\\Documents\\\\GitHub\\\\BiOptimizer-Repos\\\\portfolio\\\\src\\\\Components\\\\WhiteSpheres\\\\index.js\";\nimport React, { useRef } from \"react\";\nimport { map } from \"lodash\";\nimport { useFrame } from \"react-three-fiber\";\nimport Sphere from \"./Sphere\";\nexport default (() => {\n  const group = useRef();\n  useFrame(() => {\n    group.current.rotation.y -= 0.001;\n  });\n  const nodesSpheres = map(new Array(500), (el, i) => {\n    return /*#__PURE__*/React.createElement(Sphere, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, nodesSpheres);\n});","map":{"version":3,"sources":["D:/Users/Shawn/Documents/GitHub/BiOptimizer-Repos/portfolio/src/Components/WhiteSpheres/index.js"],"names":["React","useRef","map","useFrame","Sphere","group","current","rotation","y","nodesSpheres","Array","el","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,gBAAe,MAAM;AACnB,QAAMC,KAAK,GAAGJ,MAAM,EAApB;AAEAE,EAAAA,QAAQ,CAAC,MAAM;AACbE,IAAAA,KAAK,CAACC,OAAN,CAAcC,QAAd,CAAuBC,CAAvB,IAA4B,KAA5B;AACD,GAFO,CAAR;AAIA,QAAMC,YAAY,GAAGP,GAAG,CAAC,IAAIQ,KAAJ,CAAU,GAAV,CAAD,EAAiB,CAACC,EAAD,EAAKC,CAAL,KAAW;AAClD,wBAAO,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFuB,CAAxB;AAIA,sBAAO;AAAO,IAAA,GAAG,EAAEP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBI,YAApB,CAAP;AACD,CAZD","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { map } from \"lodash\";\r\nimport { useFrame } from \"react-three-fiber\";\r\n\r\nimport Sphere from \"./Sphere\";\r\n\r\nexport default () => {\r\n  const group = useRef();\r\n\r\n  useFrame(() => {\r\n    group.current.rotation.y -= 0.001;\r\n  });\r\n\r\n  const nodesSpheres = map(new Array(500), (el, i) => {\r\n    return <Sphere key={i} />;\r\n  });\r\n\r\n  return <group ref={group}>{nodesSpheres}</group>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}