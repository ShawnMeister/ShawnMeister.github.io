{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Shawn\\\\Documents\\\\GitHub\\\\Shawn-Portfolio\\\\portfolio\\\\react-3dAxe-landing\\\\src\\\\Components\\\\BlueSpheres\\\\Sphere.js\";\nimport React, { useMemo, useRef, useState, useEffect } from \"react\";\nimport { random } from \"lodash\";\nimport { useFrame } from \"react-three-fiber\";\nexport default (() => {\n  //mutable objects can be changed after they are created\n  //the useRef method is used to keep track everytime something is rendered\n  //it is generally used for counter variables, or variables that we want to keep\n  //track of outside the scope of the normal rendering of React\n  const mesh = useRef();\n  const time = useRef(0);\n  const [isActive] = useState(false);\n  const isActiveRef = useRef(isActive); // position\n\n  const position = useMemo(() => {\n    return [random(-5, 50, true), random(-10, 10, true), random(-5, 5, true)];\n  }, []); // random time mod factor\n\n  const timeMod = useMemo(() => random(0.1, 4, true), []); // color\n\n  let color = 0x61dafb; //useEffect of the activeState\n\n  useEffect(() => {\n    isActiveRef.current = isActive;\n  }, [isActive]); // raf loop\n  //this is what causes motion of the spheres\n\n  useFrame(() => {\n    mesh.current.rotation.y += 0.01 * timeMod;\n\n    if (isActiveRef.current) {\n      time.current += 0.03;\n      mesh.current.position.y = position[1] + Math.sin(time.current) * 0.4;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: mesh,\n    position: position,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: [0.00647, 0.00005, 7],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: color,\n    roughness: 0.6,\n    metalness: 0.1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["D:/Users/Shawn/Documents/GitHub/Shawn-Portfolio/portfolio/react-3dAxe-landing/src/Components/BlueSpheres/Sphere.js"],"names":["React","useMemo","useRef","useState","useEffect","random","useFrame","mesh","time","isActive","isActiveRef","position","timeMod","color","current","rotation","y","Math","sin"],"mappings":";AAAA,OAAOA,KAAP,IACEC,OADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,SAJF,QAKO,OALP;AAMA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,gBAAe,MAAM;AAEnB;AACA;AACA;AACA;AACA,QAAMC,IAAI,GAAGL,MAAM,EAAnB;AACA,QAAMM,IAAI,GAAGN,MAAM,CAAC,CAAD,CAAnB;AAGA,QAAM,CAACO,QAAD,IAAaN,QAAQ,CAAC,KAAD,CAA3B;AAEA,QAAMO,WAAW,GAAGR,MAAM,CAACO,QAAD,CAA1B,CAZmB,CAcnB;;AACA,QAAME,QAAQ,GAAGV,OAAO,CAAC,MAAM;AAC7B,WAAO,CAACI,MAAM,CAAC,CAAC,CAAF,EAAK,EAAL,EAAS,IAAT,CAAP,EAAuBA,MAAM,CAAC,CAAC,EAAF,EAAM,EAAN,EAAU,IAAV,CAA7B,EAA8CA,MAAM,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,IAAR,CAApD,CAAP;AACD,GAFuB,EAErB,EAFqB,CAAxB,CAfmB,CAmBnB;;AACA,QAAMO,OAAO,GAAGX,OAAO,CAAC,MAAMI,MAAM,CAAC,GAAD,EAAM,CAAN,EAAS,IAAT,CAAb,EAA6B,EAA7B,CAAvB,CApBmB,CAsBnB;;AACA,MAAIQ,KAAK,GAAG,QAAZ,CAvBmB,CAyBnB;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,WAAW,CAACI,OAAZ,GAAsBL,QAAtB;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT,CA1BmB,CA8BnB;AACA;;AACAH,EAAAA,QAAQ,CAAC,MAAM;AACbC,IAAAA,IAAI,CAACO,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,IAA2B,OAAOJ,OAAlC;;AACA,QAAIF,WAAW,CAACI,OAAhB,EAAyB;AACvBN,MAAAA,IAAI,CAACM,OAAL,IAAgB,IAAhB;AACAP,MAAAA,IAAI,CAACO,OAAL,CAAaH,QAAb,CAAsBK,CAAtB,GAA0BL,QAAQ,CAAC,CAAD,CAAR,GAAcM,IAAI,CAACC,GAAL,CAASV,IAAI,CAACM,OAAd,IAAyB,GAAjE;AACD;AACF,GANO,CAAR;AAYA,sBACE;AACE,IAAA,GAAG,EAAEP,IADP;AAEE,IAAA,QAAQ,EAAEI,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,IAAI,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,CAAnB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAUE;AACE,IAAA,MAAM,EAAC,UADT;AAEE,IAAA,KAAK,EAAEE,KAFT;AAGE,IAAA,SAAS,EAAE,GAHb;AAIE,IAAA,SAAS,EAAE,GAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAmBD,CA/DD","sourcesContent":["import React, {\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useEffect\r\n} from \"react\";\r\nimport { random } from \"lodash\";\r\nimport { useFrame } from \"react-three-fiber\";\r\n\r\nexport default () => {\r\n\r\n  //mutable objects can be changed after they are created\r\n  //the useRef method is used to keep track everytime something is rendered\r\n  //it is generally used for counter variables, or variables that we want to keep\r\n  //track of outside the scope of the normal rendering of React\r\n  const mesh = useRef();\r\n  const time = useRef(0);\r\n\r\n\r\n  const [isActive] = useState(false);\r\n\r\n  const isActiveRef = useRef(isActive);\r\n\r\n  // position\r\n  const position = useMemo(() => {\r\n    return [random(-5, 50, true), random(-10, 10, true), random(-5, 5, true)];\r\n  }, []);\r\n\r\n  // random time mod factor\r\n  const timeMod = useMemo(() => random(0.1, 4, true), []);\r\n\r\n  // color\r\n  let color = 0x61dafb;\r\n\r\n  //useEffect of the activeState\r\n  useEffect(() => {\r\n    isActiveRef.current = isActive;\r\n  }, [isActive]);\r\n\r\n  // raf loop\r\n  //this is what causes motion of the spheres\r\n  useFrame(() => {\r\n    mesh.current.rotation.y += 0.01 * timeMod;\r\n    if (isActiveRef.current) {\r\n      time.current += 0.03;\r\n      mesh.current.position.y = position[1] + Math.sin(time.current) * 0.4;\r\n    }\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <mesh\r\n      ref={mesh}\r\n      position={position}\r\n\r\n    >\r\n\r\n      {/* Below in args, the first argument is the size of the spheres\r\nthe second argument is  */}\r\n      <sphereBufferGeometry attach=\"geometry\" args={[0.00647, 0.00005, 7]} />\r\n\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n        color={color}\r\n        roughness={0.6}\r\n        metalness={0.1}\r\n      />\r\n    </mesh>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}