{"ast":null,"code":"import React,{useRef}from\"react\";import{map}from\"lodash\";import{useFrame}from\"react-three-fiber\";import Sphere from\"./Sphere\";export default(function(){var group=useRef();useFrame(function(){group.current.rotation.y+=0.0003;});var nodesSpheres=map(new Array(1000),function(el,i){return/*#__PURE__*/React.createElement(Sphere,{key:i});});var nodesBackwardSpheres=map(new Array(1000),function(el,i){return/*#__PURE__*/React.createElement(Sphere,{key:i});});return/*#__PURE__*/React.createElement(\"mesh\",null,/*#__PURE__*/React.createElement(\"group\",{ref:group},nodesSpheres),\" \",/*#__PURE__*/React.createElement(\"group\",{ref:group},nodesBackwardSpheres));});","map":{"version":3,"sources":["D:/Users/Shawn/Documents/GitHub/BiOptimizer-Repos/portfolio/src/Components/BlueSpheres/index.js"],"names":["React","useRef","map","useFrame","Sphere","group","current","rotation","y","nodesSpheres","Array","el","i","nodesBackwardSpheres"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAASC,GAAT,KAAoB,QAApB,CACA,OAASC,QAAT,KAAyB,mBAAzB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA,eAAe,UAAM,CACnB,GAAMC,CAAAA,KAAK,CAAGJ,MAAM,EAApB,CAGAE,QAAQ,CAAC,UAAM,CACbE,KAAK,CAACC,OAAN,CAAcC,QAAd,CAAuBC,CAAvB,EAA4B,MAA5B,CAED,CAHO,CAAR,CAKA,GAAMC,CAAAA,YAAY,CAAGP,GAAG,CAAC,GAAIQ,CAAAA,KAAJ,CAAU,IAAV,CAAD,CAAkB,SAACC,EAAD,CAAKC,CAAL,CAAW,CACnD,mBAAO,oBAAC,MAAD,EAAQ,GAAG,CAAEA,CAAb,EAAP,CACD,CAFuB,CAAxB,CAIA,GAAMC,CAAAA,oBAAoB,CAAGX,GAAG,CAAC,GAAIQ,CAAAA,KAAJ,CAAU,IAAV,CAAD,CAAkB,SAACC,EAAD,CAAKC,CAAL,CAAW,CAC3D,mBAAO,oBAAC,MAAD,EAAQ,GAAG,CAAEA,CAAb,EAAP,CACD,CAF+B,CAAhC,CAKF,mBAAQ,6CAAM,6BAAO,GAAG,CAAEP,KAAZ,EAAoBI,YAApB,CAAN,kBAAgD,6BAAO,GAAG,CAAEJ,KAAZ,EAAoBQ,oBAApB,CAAhD,CAAR,CAIC,CAtBD","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { map } from \"lodash\";\r\nimport { useFrame } from \"react-three-fiber\";\r\n\r\nimport Sphere from \"./Sphere\";\r\n\r\nexport default () => {\r\n  const group = useRef();\r\n\r\n\r\n  useFrame(() => {\r\n    group.current.rotation.y += 0.0003;\r\n    \r\n  });\r\n\r\n  const nodesSpheres = map(new Array(1000), (el, i) => {\r\n    return <Sphere key={i} />;\r\n  }  );\r\n\r\n  const nodesBackwardSpheres = map(new Array(1000), (el, i) => {\r\n    return <Sphere key={i} />;\r\n  });\r\n  \r\n\r\nreturn (<mesh><group ref={group}>{nodesSpheres}</group> <group ref={group}>{nodesBackwardSpheres}</group></mesh>);\r\n\r\n\r\n\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}